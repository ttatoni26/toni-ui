@use "sass:math";

$utils: (
  "padding": (
    "prefix": "p",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "padding-left": (
    "prefix": "pl",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "padding-right": (
    "prefix": "pr",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "padding-top": (
    "prefix": "pt",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "padding-bottom": (
    "prefix": "pb",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "margin": (
    "prefix": "m",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "margin-left": (
    "prefix": "ml",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "margin-right": (
    "prefix": "mr",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "margin-top": (
    "prefix": "mt",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "margin-bottom": (
    "prefix": "mb",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "opacity": (
    "prefix": "o",
    "values": (
      "0": 0,
      "10": 0.1,
      "20": 0.2,
      "30": 0.3,
      "40": 0.4,
      "50": 0.5,
      "60": 0.6,
      "70": 0.7,
      "80": 0.8,
      "90": 0.9,
      "100": 1,
    ),
  ),
  "display": (
    "prefix": "d",
    "values": (
      "none": none,
      "block": block,
      "inline": inline,
      "inline-b": inline-block,
      "flex": flex,
      "inline-f": inline-flex,
    ),
  ),
  "font-weight": (
    "prefix": "font",
    "values": (
      "hairline": 100,
      "thin": 200,
      "light": 300,
      "normal": 400,
      "medium": 500,
      "semibold": 600,
      "bold": 700,
      "bolder": 800,
      "black": 900,
    ),
  ),
  "font-size": (
    "prefix": "text",
    "values": (
      "sm": $font-size-sm,
      "base": $base-font-size,
      "lg": $font-size-lg,
      "xl": $font-size-xl,
      "2xl": $font-size-xxl,
      "3xl": $font-size-xxxl,
    ),
  ),
);

.py-0 {
  padding-top: 0;
  padding-bottom: 0;
}

.py-1 {
  padding-top: $base-spacing;
  padding-bottom: $base-spacing;
}

.py-2 {
  padding-top: $base-spacing * 2;
  padding-bottom: $base-spacing * 2;
}

.py-3 {
  padding-top: $base-spacing * 4;
  padding-bottom: $base-spacing * 4;
}

.py-4 {
  padding-top: $base-spacing * 6;
  padding-bottom: $base-spacing * 6;
}

.py-5 {
  padding-top: $base-spacing * 8;
  padding-bottom: $base-spacing * 8;
}

.px-0 {
  padding-left: 0;
  padding-right: 0;
}

.px-1 {
  padding-left: $base-spacing;
  padding-right: $base-spacing;
}

.px-2 {
  padding-left: $base-spacing * 2;
  padding-right: $base-spacing * 2;
}

.px-3 {
  padding-left: $base-spacing * 4;
  padding-right: $base-spacing * 4;
}

.px-4 {
  padding-left: $base-spacing * 6;
  padding-right: $base-spacing * 6;
}

.px-5 {
  padding-left: $base-spacing * 8;
  padding-right: $base-spacing * 8;
}

.my-0 {
  margin-top: 0;
  margin-bottom: 0;
}

.my-1 {
  margin-top: $base-spacing;
  margin-bottom: $base-spacing;
}

.my-2 {
  margin-top: $base-spacing * 2;
  margin-bottom: $base-spacing * 2;
}

.my-3 {
  margin-top: $base-spacing * 4;
  margin-bottom: $base-spacing * 4;
}

.my-4 {
  margin-top: $base-spacing * 6;
  margin-bottom: $base-spacing * 6;
}

.my-5 {
  margin-top: $base-spacing * 8;
  margin-bottom: $base-spacing * 8;
}

.mx-0 {
  margin-left: 0;
  margin-right: 0;
}

.mx-1 {
  margin-left: $base-spacing;
  margin-right: $base-spacing;
}

.mx-2 {
  margin-left: $base-spacing * 2;
  margin-right: $base-spacing * 2;
}

.mx-3 {
  margin-left: $base-spacing * 4;
  margin-right: $base-spacing * 4;
}

.mx-4 {
  margin-left: $base-spacing * 6;
  margin-right: $base-spacing * 6;
}

.mx-5 {
  margin-left: $base-spacing * 8;
  margin-right: $base-spacing * 8;
}

// generate utility classes
@each $property, $map in $utils {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    @if ($k == "default") {
      .#{$prefix} {
        #{$property}: $v;
      }
    } @else {
      .#{$prefix}-#{$k} {
        #{$property}: $v;
      }
    }
  }
}
